openapi: 3.0.1
info:
  title: BarNone.API
  version: '1.0'
paths:
  /Admin:
    get:
      tags:
        - Admin
      responses:
        '200':
          description: OK
  /api/Inventory:
    get:
      tags:
        - Inventory
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    put:
      tags:
        - Inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          text/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          description: OK
  /api/Menu:
    get:
      tags:
        - Menu
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Menu/GetMenuItems:
    get:
      tags:
        - Menu
      summary: Retrieves all menu items.
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
  /api/Menu/GetTags:
    get:
      tags:
        - Menu
      summary: Retrieves all tags for menu items.
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /api/Order/AddOrder:
    put:
      tags:
        - Order
      summary: >-
        Used for sending new guest order to backend. Endpoint will add order to
        the database, and process any actions necessary to update the user
        account where applicable.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/GuestOrder'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GuestOrder'
      responses:
        '200':
          description: OK
components:
  schemas:
    GuestOrder:
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        specialInstructions:
          type: string
          nullable: true
        loyaltyProgramId:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
          nullable: true
        total:
          type: number
          format: float
      additionalProperties: false
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        isAlcoholic:
          type: boolean
      additionalProperties: false
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        ingredients:
          type: array
          items:
            type: string
          nullable: true
        price:
          type: number
          format: float
        numberOfOrders:
          type: integer
          format: int32
        specialInstructions:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
